<?php
// $Id$ 
/** 
 * @file 
 * Module to expose theme items, site information items and more as blocks.
 */ 
 
 include_once './' . drupal_get_path('module', 'blockify') . '/theme/theme.inc';

/**
 * Implementation of hook_init().
 */
function blockify_init() {
  drupal_add_css(drupal_get_path('module', 'blockify') .'/css/blockify.css');
}

/** 
 * Implementation of hook_help().
 */ 
function blockify_help($path, $arg) { 
  
  if ($path == 'admin/help#blockify') { 
    $txt = 'This module exposes theme items (such as $logo), page items (such as $messages) and '. 
      'site info items (such as $site_name and $slogan) as blocks.'; 
    
    return '<p>'. t($txt) .'</p>'; 
  } 
} 

/** 
 * Implementation of hook_menu() 
 */ 
function blockify_menu() {  
  $items['admin/settings/blockify'] = array( 
    'title' => t('Blockify settings'), 
    'description' => t('Select which blockify blocks to enable.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('blockify_admin_settings'), 
    'access arguments' => array('administer blockify'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/admin.inc', 
  ); 
  return $items; 
}

/**
 * Implementation of hook_perm().
 */
function blockify_perm() {
  return array('administer blockify');
}

/**
 * Implementation of hook_block().
 */
function blockify_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {

    case 'list':
      $blocks['blockify-theme-default-logo']['info'] = t('[blockify] Default logo');
      $blocks['blockify-theme-custom-logo']['info'] = t('[blockify] Custom logo');
      $blocks['blockify-siteinfo-name']['info'] = t('[blockify] Site name');
      $blocks['blockify-siteinfo-slogan']['info'] = t('[blockify] Site slogan');
      $blocks['blockify-siteinfo-mission']['info'] = t('[blockify] Site mission');
      $blocks['blockify-siteinfo-footer']['info'] = t('[blockify] Site footer');
      $blocks['blockify-page-title']['info'] = t('[blockify] Page title');
      $blocks['blockify-page-breadcrumb']['info'] = t('[blockify] Page breadcrumb');
      $blocks['blockify-page-messages-error']['info'] = t('[blockify] Page error messages');
      $blocks['blockify-page-messages-warning']['info'] = t('[blockify] Page warning messages');
      $blocks['blockify-page-messages-status']['info'] = t('[blockify] Page status messages');
      $blocks['blockify-page-messages-all']['info'] = t('[blockify] Page all messages');
      $blocks['blockify-page-help']['info'] = t('[blockify] Page help');
      $blocks['blockify-page-tabs']['info'] = t('[blockify] Page menu tabs');
      return $blocks;

    case 'view':
      $blocks = _blockify_get_blocks();
      
      foreach ($blocks as $b => $blockname){
        if ($delta == $blockname){
          $block['subject'] = '';
          $block['content'] = blockify_get_content($delta);          
        }
      }
      return $block;
  }    
}

/**
 * Provides individual block content.
 */
function blockify_get_content($delta) {
  $output = '';
  switch ($delta) {
    case 'blockify-theme-default-logo':
      global $theme_key;
    
      //TODO: add static var to avoid needless queries
      $sql = "SELECT filename FROM {system} WHERE `name` = '%s'";
      $filename = db_result(db_query($sql, $theme_key));
      $logo_path = base_path() . dirname($filename) .'/logo.png';
      $output = theme('blockify_theme_default_logo', check_url($logo_path));  
      break;
  
    case 'blockify-theme-custom-logo':
      global $theme_key;
      $theme_settings = variable_get("theme_" . $theme_key . "_settings", array());
      $logo_path = base_path() . $theme_settings['logo_path'];
      $output = theme('blockify_theme_default_logo', check_url($logo_path));  
    break;

    case 'blockify-siteinfo-name':
      $site_name = filter_xss_admin(variable_get('site_name', 'Drupal'));
      $output = theme('blockify_siteinfo_name', $site_name);
    break;
    
    case 'blockify-siteinfo-slogan':
      $site_slogan = filter_xss_admin(variable_get('site_slogan', ''));
      $output = theme('blockify_siteinfo_slogan', $site_slogan);
    break;    
  
    case 'blockify-siteinfo-mission':
      $site_mission = filter_xss_admin(variable_get('site_mission', ''));
      $output = theme('blockify_siteinfo_mission', $site_mission);
    break;  
    
    case 'blockify-siteinfo-footer':
      $site_footer = filter_xss_admin(variable_get('site_footer', ''));
      $output = theme('blockify_siteinfo_footer', $site_footer);
    break;    

    case 'blockify-page-title':
      $output = theme('blockify_page_title', drupal_get_title());
    break;
    
    case 'blockify-page-breadcrumb':
      $breadcrumb = drupal_get_breadcrumb();
      $output = theme('blockify_page_breadcrumb', $breadcrumb);
    break;
    
    case 'blockify-page-messages-error':
      $output = theme('status_messages', 'error');
      // TODO: provide theme function
    break;
    
    case 'blockify-page-messages-warning':
      $output = theme('status_messages', 'warning');
      // TODO: provide theme function
    break;    
    
    case 'blockify-page-messages-status':
      $output = theme('status_messages', 'status');
      // TODO: provide theme function
    break;    
    
    case 'blockify-page-messages-all':
      $output = theme('status_messages');
      // TODO: provide theme function
    break;    

    case 'blockify-page-help':
      $output = theme('help');
      // TODO: provide theme function
    break;    

    case 'blockify-page-tabs':
      $output = theme('menu_local_tasks');
      // TODO: provide theme function
    break;    
  
  }
  return $output;
}

/**
 * Provides a list of all (enabled) blockify blocks.
 */
function _blockify_get_blocks($enabled_blocks_only = TRUE){
  // TODO: return all blocks or enabled blocks only based on param
  return array(
    'default_logo' => 'blockify-theme-default-logo',
    'custom_logo' => 'blockify-theme-custom-logo',
    'site_name' => 'blockify-siteinfo-name',
    'site_slogan' => 'blockify-siteinfo-slogan',
    'site_mission' => 'blockify-siteinfo-mission',
    'site_footer' => 'blockify-siteinfo-footer',
    'pagetitle' => 'blockify-page-title',
    'page_breadcrumb' => 'blockify-page-breadcrumb',
    'page_help' => 'blockify-page-help',
    'page_tabs' => 'blockify-page-tabs',    
    'messages_error' => 'blockify-page-messages-error',
    'messages_warning' => 'blockify-page-messages-warning',
    'messages_status' => 'blockify-page-messages-status',
    'messages_all' => 'blockify-page-messages-all',
  );
}