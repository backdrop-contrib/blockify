<?php
/**
 * @file
 * Exposes a number of core Drupal elements as blocks.
 */

/**
 * Implements hook_help().
 */
function blockify_help($path, $arg) {
  if ($path == 'admin/help#blockify') {
    return '<p>' . t('This module exposes a number of core Drupal elements as blocks.') . '</p>';
  }
}

/**
 * Implements hook_menu()
 */
function blockify_menu() {
  $items = array();

  $items['admin/structure/block/blockify'] = array(
    'title' => 'Blockify',
    'description' => 'Settings for the Blockify module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('blockify_admin_settings'),
    'access arguments' => array('administer blockify'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'blockify.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function blockify_permission() {
  return array(
    'administer blockify' => array(
      'title' => t('Administer Blockify'),
      'description' => t('Manage settings for Blockify module'),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function blockify_block_info() {
  $block_list = _blockify_get_blocks();
  foreach ($block_list as $block_delta => $block_name) {
    if (_blockify_is_enabled($block_delta)) {
      $blocks[$block_delta]['info'] = $block_name;
    }
  }
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function blockify_block_view($delta = '') {
  $blocks = _blockify_get_blocks();
  foreach ($blocks as $block_delta => $block_name) {
    if ($delta == $block_delta && _blockify_is_enabled($block_delta)) {
      return array(
        'subject' => '',
        'content' => blockify_get_content($delta),
      );
    }
  }
}

/**
 * Provides individual block content.
 */
function blockify_get_content($delta) {
  switch ($delta) {
    case 'blockify-logo':
      $variables['logo_path'] = theme_get_setting('logo');
      return theme('blockify_logo', $variables);

    case 'blockify-site-name':
      $variables['site_name'] = filter_xss_admin(variable_get('site_name', 'Drupal'));
      return theme('blockify_site_name', $variables);

    case 'blockify-site-slogan':
      $variables['site_slogan'] = filter_xss_admin(variable_get('site_slogan', ''));
      return theme('blockify_site_slogan', $variables);

    case 'blockify-footer-message':
      $variables['site_footer'] = filter_xss_admin(variable_get('site_footer', ''));
      return theme('blockify_footer_message', $variables);

    case 'blockify-page-title':
      $variables['page_title'] = drupal_get_title();
      return theme('blockify_page_title', $variables);

    case 'blockify-breadcrumb':
      $variables['breadcrumb'] = drupal_get_breadcrumb();
      return theme('blockify_breadcrumb', $variables);

    case 'blockify-messages':
      return theme('status_messages');

    case 'blockify-tabs':
      return theme('menu_local_tasks');
  }
}

/**
 * Provides a list of all (enabled) blockify blocks.
 */
function _blockify_get_blocks($enabled_blocks_only = TRUE) {
  // TODO: return all blocks or enabled blocks only based on param
  return array(
    'blockify-logo' => t('Logo'),
    'blockify-site-name' => t('Site name'),
    'blockify-site-slogan' => t('Site slogan'),
    'blockify-footer-message' => t('Footer message'),
    'blockify-page-title' => t('Page title'),
    'blockify-breadcrumb' => t('Breadcrumb'),
    'blockify-tabs' => t('Tabs'),
    'blockify-messages' => t('Messages (all)'),
  );
}

/**
 * Verify if a given blockify block is enabled in the blockify admin settings.
 */
function _blockify_is_enabled($delta) {
  $blocks = variable_get('blockify_blocks', array());
  return $blocks[$delta];
}

/**
 * Implements hook_theme().
 */
function blockify_theme() {
  return array(
    'blockify_logo' => array(
      'variables' => array('logo_path' => NULL),
      'file' => 'blockify.theme.inc',
    ),
    'blockify_site_name' => array(
      'variables' => array('site_name' => NULL),
      'file' => 'blockify.theme.inc',
    ),
    'blockify_site_slogan' => array(
      'variables' => array('site_slogan' => NULL),
      'file' => 'blockify.theme.inc',
    ),
    'blockify_footer_message' => array(
      'variables' => array('site_footer' => NULL),
      'file' => 'blockify.theme.inc',
    ),
    'blockify_page_title' => array(
      'variables' => array('page_title' => NULL),
      'file' => 'blockify.theme.inc',
     ),
    'blockify_breadcrumb' => array(
      'variables' => array('breadcrumb' => NULL),
      'file' => 'blockify.theme.inc',
    ),
  );
}
